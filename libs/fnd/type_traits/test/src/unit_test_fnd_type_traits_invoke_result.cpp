/**
 *	@file	unit_test_fnd_type_traits_invoke_result.cpp
 *
 *	@brief	invoke_result のテスト
 *
 *	@author	myoukaku
 */

#include <bksge/fnd/type_traits/invoke_result.hpp>
#include <bksge/fnd/type_traits/void_t.hpp>
#include <bksge/fnd/type_traits/bool_constant.hpp>
#include <bksge/fnd/type_traits/is_same.hpp>
#include <gtest/gtest.h>
#include <memory>
#include <string>
#include "type_traits_test_utility.hpp"

namespace bksge_type_traits_test
{

namespace invoke_result_test
{

template <int N>
struct Test {};

struct S
{
#if defined(BKSGE_HAS_CXX11_REF_QUALIFIERS)
	Test< 0> operator()()                                 &&;
	Test< 1> operator()()                   const         &&;
	Test< 2> operator()()                         volatile&&;
	Test< 3> operator()()                   const volatile&&;
	Test< 4> operator()(int)                              &&;
	Test< 5> operator()(int)                const         &&;
	Test< 6> operator()(int)                      volatile&&;
	Test< 7> operator()(int)                const volatile&&;
	Test< 8> operator()(std::string const&)               &&;
	Test< 9> operator()(std::string const&) const         &&;
	Test<10> operator()(std::string const&)       volatile&&;
	Test<11> operator()(std::string const&) const volatile&&;
	Test<12> operator()(int, long)                        &&;
	Test<13> operator()(int, long)          const         &&;
	Test<14> operator()(int, long)                volatile&&;
	Test<15> operator()(int, long)          const volatile&&;

	Test<16> operator()()                                 &;
	Test<17> operator()()                   const         &;
	Test<18> operator()()                         volatile&;
	Test<19> operator()()                   const volatile&;
	Test<20> operator()(int)                              &;
	Test<21> operator()(int)                const         &;
	Test<22> operator()(int)                      volatile&;
	Test<23> operator()(int)                const volatile&;
	Test<24> operator()(std::string const&)               &;
	Test<25> operator()(std::string const&) const         &;
	Test<26> operator()(std::string const&)       volatile&;
	Test<27> operator()(std::string const&) const volatile&;
	Test<28> operator()(int, long)                        &;
	Test<29> operator()(int, long)          const         &;
	Test<30> operator()(int, long)                volatile&;
	Test<31> operator()(int, long)          const volatile&;
#else
	Test< 0> operator()()                                 ;
	Test< 1> operator()()                   const         ;
	Test< 2> operator()()                         volatile;
	Test< 3> operator()()                   const volatile;
	Test< 4> operator()(int)                              ;
	Test< 5> operator()(int)                const         ;
	Test< 6> operator()(int)                      volatile;
	Test< 7> operator()(int)                const volatile;
	Test< 8> operator()(std::string const&)               ;
	Test< 9> operator()(std::string const&) const         ;
	Test<10> operator()(std::string const&)       volatile;
	Test<11> operator()(std::string const&) const volatile;
	Test<12> operator()(int, long)                        ;
	Test<13> operator()(int, long)          const         ;
	Test<14> operator()(int, long)                volatile;
	Test<15> operator()(int, long)          const volatile;
#endif
};

template <typename, typename = bksge::void_t<>>
struct has_type : bksge::false_type {};
 
template <typename T>
struct has_type<T, bksge::void_t<typename T::type>> : bksge::true_type {};

#define BKSGE_INVOKE_RESULT_TEST(EXPECTED, ...)	\
	static_assert(has_type<bksge::invoke_result<__VA_ARGS__>>::value, "");	\
	static_assert(bksge::is_same<EXPECTED, bksge::invoke_result<__VA_ARGS__>::type>::value, "");	\
	static_assert(bksge::is_same<EXPECTED, bksge::invoke_result_t<__VA_ARGS__>>::value, "")

#define BKSGE_INVOKE_RESULT_TEST_HAS_RESULT(...)	\
	static_assert(has_type<bksge::invoke_result<__VA_ARGS__>>::value, "")

#define BKSGE_INVOKE_RESULT_TEST_NO_RESULT(...)	\
	static_assert(!has_type<bksge::invoke_result<__VA_ARGS__>>::value, "")

// functor object
BKSGE_INVOKE_RESULT_TEST(Test< 0>, S               );
BKSGE_INVOKE_RESULT_TEST(Test< 1>, S const         );
BKSGE_INVOKE_RESULT_TEST(Test< 2>, S       volatile);
BKSGE_INVOKE_RESULT_TEST(Test< 3>, S const volatile);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               , int);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         , int);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile, int);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile, int);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               , int&);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         , int&);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               , long);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         , long);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile, long);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               , int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         , int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile, int*);
BKSGE_INVOKE_RESULT_TEST(Test< 8>, S               , std::string);
BKSGE_INVOKE_RESULT_TEST(Test< 9>, S const         , std::string);
BKSGE_INVOKE_RESULT_TEST(Test<10>, S       volatile, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<11>, S const volatile, std::string);
BKSGE_INVOKE_RESULT_TEST(Test< 8>, S               , const char*);
BKSGE_INVOKE_RESULT_TEST(Test< 9>, S const         , const char*);
BKSGE_INVOKE_RESULT_TEST(Test<10>, S       volatile, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<11>, S const volatile, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<12>, S               , int, long);
BKSGE_INVOKE_RESULT_TEST(Test<13>, S const         , int, long);
BKSGE_INVOKE_RESULT_TEST(Test<14>, S       volatile, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<15>, S const volatile, int, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               , int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         , int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               , int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         , int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile, int, long, char);

BKSGE_INVOKE_RESULT_TEST(Test< 0>, S               &&);
BKSGE_INVOKE_RESULT_TEST(Test< 1>, S const         &&);
BKSGE_INVOKE_RESULT_TEST(Test< 2>, S       volatile&&);
BKSGE_INVOKE_RESULT_TEST(Test< 3>, S const volatile&&);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               &&, int);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         &&, int);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile&&, int);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile&&, int);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               &&, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         &&, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile&&, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile&&, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               &&, long);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         &&, long);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile&&, long);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile&&, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &&, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &&, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&&, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&&, int*);
BKSGE_INVOKE_RESULT_TEST(Test< 8>, S               &&, std::string);
BKSGE_INVOKE_RESULT_TEST(Test< 9>, S const         &&, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<10>, S       volatile&&, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<11>, S const volatile&&, std::string);
BKSGE_INVOKE_RESULT_TEST(Test< 8>, S               &&, const char*);
BKSGE_INVOKE_RESULT_TEST(Test< 9>, S const         &&, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<10>, S       volatile&&, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<11>, S const volatile&&, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<12>, S               &&, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<13>, S const         &&, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<14>, S       volatile&&, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<15>, S const volatile&&, int, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &&, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &&, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&&, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&&, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &&, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &&, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&&, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&&, int, long, char);

BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, int&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, int&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, int&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, int&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, const char*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, const char*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, const char*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, const char*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, int, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, int, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, int, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, int, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               *, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         *, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile*, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile*, int, long, char);

#if defined(BKSGE_HAS_CXX11_REF_QUALIFIERS)
BKSGE_INVOKE_RESULT_TEST(Test<16>, S               &);
BKSGE_INVOKE_RESULT_TEST(Test<17>, S const         &);
BKSGE_INVOKE_RESULT_TEST(Test<18>, S       volatile&);
BKSGE_INVOKE_RESULT_TEST(Test<19>, S const volatile&);
BKSGE_INVOKE_RESULT_TEST(Test<20>, S               &, int);
BKSGE_INVOKE_RESULT_TEST(Test<21>, S const         &, int);
BKSGE_INVOKE_RESULT_TEST(Test<22>, S       volatile&, int);
BKSGE_INVOKE_RESULT_TEST(Test<23>, S const volatile&, int);
BKSGE_INVOKE_RESULT_TEST(Test<20>, S               &, int&);
BKSGE_INVOKE_RESULT_TEST(Test<21>, S const         &, int&);
BKSGE_INVOKE_RESULT_TEST(Test<22>, S       volatile&, int&);
BKSGE_INVOKE_RESULT_TEST(Test<23>, S const volatile&, int&);
BKSGE_INVOKE_RESULT_TEST(Test<20>, S               &, long);
BKSGE_INVOKE_RESULT_TEST(Test<21>, S const         &, long);
BKSGE_INVOKE_RESULT_TEST(Test<22>, S       volatile&, long);
BKSGE_INVOKE_RESULT_TEST(Test<23>, S const volatile&, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&, int*);
BKSGE_INVOKE_RESULT_TEST(Test<24>, S               &, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<25>, S const         &, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<26>, S       volatile&, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<27>, S const volatile&, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<24>, S               &, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<25>, S const         &, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<26>, S       volatile&, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<27>, S const volatile&, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<28>, S               &, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<29>, S const         &, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<30>, S       volatile&, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<31>, S const volatile&, int, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&, int, long, char);
#else
BKSGE_INVOKE_RESULT_TEST(Test< 0>, S               &);
BKSGE_INVOKE_RESULT_TEST(Test< 1>, S const         &);
BKSGE_INVOKE_RESULT_TEST(Test< 2>, S       volatile&);
BKSGE_INVOKE_RESULT_TEST(Test< 3>, S const volatile&);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               &, int);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         &, int);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile&, int);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile&, int);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               &, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         &, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile&, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile&, int&);
BKSGE_INVOKE_RESULT_TEST(Test< 4>, S               &, long);
BKSGE_INVOKE_RESULT_TEST(Test< 5>, S const         &, long);
BKSGE_INVOKE_RESULT_TEST(Test< 6>, S       volatile&, long);
BKSGE_INVOKE_RESULT_TEST(Test< 7>, S const volatile&, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&, int*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&, int*);
BKSGE_INVOKE_RESULT_TEST(Test< 8>, S               &, std::string);
BKSGE_INVOKE_RESULT_TEST(Test< 9>, S const         &, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<10>, S       volatile&, std::string);
BKSGE_INVOKE_RESULT_TEST(Test<11>, S const volatile&, std::string);
BKSGE_INVOKE_RESULT_TEST(Test< 8>, S               &, const char*);
BKSGE_INVOKE_RESULT_TEST(Test< 9>, S const         &, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<10>, S       volatile&, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<11>, S const volatile&, const char*);
BKSGE_INVOKE_RESULT_TEST(Test<12>, S               &, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<13>, S const         &, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<14>, S       volatile&, int, long);
BKSGE_INVOKE_RESULT_TEST(Test<15>, S const volatile&, int, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&, int, std::string);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S               &, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const         &, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S       volatile&, int, long, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(S const volatile&, int, long, char);
#endif

// pointer to function
typedef bool        (&RF0)();
typedef char        (&RF1)(int);
typedef wchar_t     (&RF2)(int, int);
typedef int         (&RF3)(int, int, int);
typedef short       (*PF0)();
typedef long        (*PF1)(int);
typedef float       (*PF2)(int, int);
typedef double      (*PF3)(int, int, int);
typedef UDT         (*&PRF0)();
typedef enum_UDT    (*&PRF1)(int);
typedef union_UDT   (*&PRF2)(int, int);
typedef void        (*&PRF3)(int, int, int);

BKSGE_INVOKE_RESULT_TEST(bool,      RF0);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF0, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF0, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF0, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF0, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF1);
BKSGE_INVOKE_RESULT_TEST(char,      RF1, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF1, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF1, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF1, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF2);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF2, int);
BKSGE_INVOKE_RESULT_TEST(wchar_t,   RF2, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF2, UDT, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF2, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF3);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF3, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF3, int, int);
BKSGE_INVOKE_RESULT_TEST(int,       RF3, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( RF3, int, int, UDT);
BKSGE_INVOKE_RESULT_TEST(short,     PF0);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF0, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF0, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF0, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF0, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF1);
BKSGE_INVOKE_RESULT_TEST(long,      PF1, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF1, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF1, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF1, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF2);
BKSGE_INVOKE_RESULT_TEST(float,     PF2, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF2, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF2, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF3);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF3, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF3, int, int);
BKSGE_INVOKE_RESULT_TEST(double,    PF3, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PF3, int, int, UDT);
BKSGE_INVOKE_RESULT_TEST(UDT,       PRF0);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF0, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF0, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF0, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF1);
BKSGE_INVOKE_RESULT_TEST(enum_UDT,  PRF1, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF1, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF2);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF2, int);
BKSGE_INVOKE_RESULT_TEST(union_UDT, PRF2, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF2, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF3);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF3, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF3, int, int);
BKSGE_INVOKE_RESULT_TEST(void,      PRF3, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT( PRF3, int, int, UDT);

// pointer to member function
typedef int   (S::*                PMS0)();
typedef char  (S::* const          PMS1)(long);
typedef void  (S::*       volatile PMS2)(long, int&);
typedef float (S::* const volatile PMS3)(long, int, short);

BKSGE_INVOKE_RESULT_TEST(int,      PMS0,                S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const          S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,       volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0,                S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const          S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,       volatile S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0,                S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const          S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0,                S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const          S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,       volatile S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0,                S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const          S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0,                S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const          S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0,                std::unique_ptr<S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0, const          std::unique_ptr<S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,                std::unique_ptr<const          S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,                std::unique_ptr<      volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0,                std::unique_ptr<const volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0, std::unique_ptr<S>, int);

BKSGE_INVOKE_RESULT_TEST(char,    PMS1, S,   int);
BKSGE_INVOKE_RESULT_TEST(char,    PMS1, S&,  int);
BKSGE_INVOKE_RESULT_TEST(char,    PMS1, S*,  int);
BKSGE_INVOKE_RESULT_TEST(char,    PMS1, S*&, int);
BKSGE_INVOKE_RESULT_TEST(char,    PMS1, std::unique_ptr<S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1, const          S&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1, volatile       S&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1, const volatile S&, int);

BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2, S,   long, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2, S,   int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, S,   long, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, S&,  long, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, S*,  long, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, S*&, long, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, std::unique_ptr<S>, long, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, S,   int, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, S&,  int, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, S*,  int, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, S*&, int, int&);
BKSGE_INVOKE_RESULT_TEST(void,     PMS2, std::unique_ptr<S>, int, int&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2, const          S&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2, volatile       S&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2, const volatile S&, int, int);

BKSGE_INVOKE_RESULT_TEST(float,    PMS3, S,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS3, S&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS3, S*,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS3, S*&, int, int, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS3, std::unique_ptr<S>, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3, S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3, S&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3, S&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3, S&, int, int, int, int);

typedef int    (S::*                PMS0C)()                const;
typedef float  (S::* const          PMS1C)(long&)           const;
typedef double (S::*       volatile PMS2C)(long, int)       const;
typedef void   (S::* const volatile PMS3C)(long, int, char) const;

BKSGE_INVOKE_RESULT_TEST(int,      PMS0C,                S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C, const          S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C,       volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, const volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C,                S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C, const          S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C,       volatile S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C,                S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C, const          S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C,                S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C, const          S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C,       volatile S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C,                S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C, const          S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C,                S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C, const          S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C,                std::unique_ptr<S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C, const          std::unique_ptr<S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0C,                std::unique_ptr<const          S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C,                std::unique_ptr<      volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C,                std::unique_ptr<const volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0C, std::unique_ptr<S>, int);

BKSGE_INVOKE_RESULT_TEST(float,    PMS1C,                S,    long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C, const          S,    long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S,    long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S,    long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C,                S&,   long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C, const          S&,   long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S&,   long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S&,   long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C,                S&&,  long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C, const          S&&,  long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S&&,  long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S&&,  long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C,                S*,   long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C, const          S*,   long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S*,   long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S*,   long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C,                S*&,  long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C, const          S*&,  long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S*&,  long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S*&,  long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C,                S*&&, long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C, const          S*&&, long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S*&&, long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S*&&, long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C, std::unique_ptr<               S>, long&);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1C, std::unique_ptr<const          S>, long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<      volatile S>, long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<const volatile S>, long&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,                S,    long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const          S,    long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S,    long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S,    long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,                S&,   long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const          S&,   long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S&,   long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S&,   long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,                S&&,  long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const          S&&,  long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S&&,  long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S&&,  long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,                S*,   long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const          S*,   long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S*,   long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S*,   long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,                S*&,  long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const          S*&,  long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S*&,  long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S*&,  long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,                S*&&, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const          S*&&, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C,       volatile S*&&, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, const volatile S*&&, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<               S>, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<const          S>, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<      volatile S>, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<const volatile S>, long);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S,    UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S&,   UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S&&,  UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*,   UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*&,  UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*&&, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<S>, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1C, std::unique_ptr<S>, int, int);

BKSGE_INVOKE_RESULT_TEST(double,   PMS2C,                S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C, const          S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C,       volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, const volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C,                S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C, const          S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C,       volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, const volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C,                S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C, const          S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C,       volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, const volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C,                S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C, const          S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C,       volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, const volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C,                S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C, const          S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C,       volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, const volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C,                S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C, const          S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C,       volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, const volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C, std::unique_ptr<               S>, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2C, std::unique_ptr<const          S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, std::unique_ptr<      volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, std::unique_ptr<const volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, S, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2C, S, int, int, int);

BKSGE_INVOKE_RESULT_TEST(void,     PMS3C, S,    int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMS3C, S&,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMS3C, S&&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMS3C, S*,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMS3C, S*&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMS3C, S*&&, int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMS3C, std::unique_ptr<S>, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3C, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3C, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3C, S, int, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3C, S, int, int, int, int);

typedef int   (S::*                PMS0V)()                volatile;
typedef char  (S::* const          PMS1V)(long)            volatile;
typedef short (S::*       volatile PMS2V)(long, int)       volatile;
typedef int&  (S::* const volatile PMS3V)(long, int, char) volatile;

BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,                S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const          S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,       volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,                S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const          S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,       volatile S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,                S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const          S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,                S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const          S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,       volatile S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,                S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const          S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,                S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V, std::unique_ptr<               S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, std::unique_ptr<const          S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0V, std::unique_ptr<      volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, std::unique_ptr<const volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0V, std::unique_ptr<S>, int);

BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,                S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const          S,    int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,       volatile S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const volatile S,    int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,                S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const          S&,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,       volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,                S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const          S&&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,       volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,                S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const          S*,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,       volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,                S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const          S*&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,       volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,                S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const          S*&&, int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V,       volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, const volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V, std::unique_ptr<               S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, std::unique_ptr<const          S>, int);
BKSGE_INVOKE_RESULT_TEST(char,     PMS1V, std::unique_ptr<      volatile S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, std::unique_ptr<const volatile S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, S, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1V, S, int, int);

BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,                S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const          S,    int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,       volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,                S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const          S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,       volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,                S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const          S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,       volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,                S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const          S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,       volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,                S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const          S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,       volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,                S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const          S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V,       volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, const volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V, std::unique_ptr<               S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, std::unique_ptr<const          S>, int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMS2V, std::unique_ptr<      volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, std::unique_ptr<const volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, S, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2V, S, int, int, int);

BKSGE_INVOKE_RESULT_TEST(int&,     PMS3V, S,    int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMS3V, S&,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMS3V, S&&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMS3V, S*,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMS3V, S*&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMS3V, S*&&, int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMS3V, std::unique_ptr<S>, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3V, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3V, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3V, S, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3V, S, int, int, int, int);

typedef int    (S::*PMS0CV)()                const volatile;
typedef float  (S::*PMS1CV)(long)            const volatile;
typedef double (S::*PMS2CV)(long, int)       const volatile;
typedef int*   (S::*PMS3CV)(long, int, char) const volatile;

BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,                S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const          S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,       volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,                S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const          S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,                S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const          S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,                S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const          S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,                S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const          S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,                S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, std::unique_ptr<               S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, std::unique_ptr<const          S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, std::unique_ptr<      volatile S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMS0CV, std::unique_ptr<const volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0CV, S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0CV, S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0CV, S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0CV, S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0CV, S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0CV, S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS0CV, std::unique_ptr<S>, int);

BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,                S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const          S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,       volatile S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const volatile S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,                S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const          S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,       volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,                S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const          S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,       volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,                S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const          S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,       volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,                S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const          S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,       volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,                S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const          S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV,       volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, const volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, std::unique_ptr<               S>, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, std::unique_ptr<const          S>, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, std::unique_ptr<      volatile S>, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMS1CV, std::unique_ptr<const volatile S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1CV, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1CV, S, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS1CV, S, int, int);

BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,                S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const          S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,       volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,                S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const          S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,       volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,                S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const          S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,       volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,                S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const          S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,       volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,                S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const          S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,       volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,                S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const          S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV,       volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, const volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, std::unique_ptr<               S>, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, std::unique_ptr<const          S>, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, std::unique_ptr<      volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMS2CV, std::unique_ptr<const volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2CV, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2CV, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2CV, S, UDT, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS2CV, S, int, int, int);

BKSGE_INVOKE_RESULT_TEST(int*,     PMS3CV, S,    int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMS3CV, S&,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMS3CV, S&&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMS3CV, S*,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMS3CV, S*&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMS3CV, S*&&, int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMS3CV, std::unique_ptr<S>, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3CV, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3CV, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3CV, S, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3CV, S, int, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMS3CV, S, int, int, int, int);

typedef int   (S::*                &PMSR0)();
typedef char  (S::* const          &PMSR1)(long);
typedef void  (S::*       volatile &PMSR2)(long, int);
typedef float (S::* const volatile &PMSR3)(long, int, short);

BKSGE_INVOKE_RESULT_TEST(int,      PMSR0,                S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const          S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0,       volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0,                S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const          S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, volatile       S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0,                S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const          S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0,                S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const          S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0,       volatile S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0,                S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const          S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0,                S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const          S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0, std::unique_ptr<               S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, std::unique_ptr<const          S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, std::unique_ptr<      volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, std::unique_ptr<const volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0, std::unique_ptr<S>, int);

BKSGE_INVOKE_RESULT_TEST(char,     PMSR1, S,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1, S&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1, S*,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1, S*&, int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1, std::unique_ptr<S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1, const          S&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1, volatile       S&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1, const volatile S&, int);

BKSGE_INVOKE_RESULT_TEST(void,     PMSR2, S,   int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR2, S&,  int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR2, S*,  int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR2, S*&, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR2, std::unique_ptr<S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2, const          S&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2, volatile       S&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2, const volatile S&, int, int);

BKSGE_INVOKE_RESULT_TEST(float,    PMSR3, S,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR3, S&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR3, S*,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR3, S*&, int, int, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR3, std::unique_ptr<S>, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3, S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3, S&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3, S&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3, S&, int, int, int, int);

typedef int    (S::*                &PMSR0C)()                const;
typedef float  (S::* const          &PMSR1C)(long)            const;
typedef double (S::*       volatile &PMSR2C)(long, int)       const;
typedef void   (S::* const volatile &PMSR3C)(long, int, char) const;

BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C,                S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C, const          S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C,       volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, const volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C,                S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C, const          S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C,       volatile S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C,                S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C, const          S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C,                S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C, const          S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C,       volatile S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C,                S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C, const          S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C,                S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C, const          S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C, std::unique_ptr<               S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0C, std::unique_ptr<const          S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, std::unique_ptr<      volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, std::unique_ptr<const volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0C, std::unique_ptr<S>, int);

BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C,                S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C, const          S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C,       volatile S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, const volatile S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C,                S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C, const          S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C,       volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, const volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C,                S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C, const          S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C,       volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, const volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C,                S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C, const          S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C,       volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, const volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C,                S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C, const          S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C,       volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, const volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C,                S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C, const          S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C,       volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, const volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C, std::unique_ptr<               S>, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1C, std::unique_ptr<const          S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, std::unique_ptr<      volatile S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, std::unique_ptr<const volatile S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, std::unique_ptr<S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S,    UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S&,   UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S&&,  UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*,   UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*&,  UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*&&, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, std::unique_ptr<S>, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1C, std::unique_ptr<S>, int, int);

BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C,                S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C, const          S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C,       volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, const volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C,                S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C, const          S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C,       volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, const volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C,                S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C, const          S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C,       volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, const volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C,                S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C, const          S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C,       volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, const volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C,                S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C, const          S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C,       volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, const volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C,                S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C, const          S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C,       volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, const volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C, std::unique_ptr<               S>, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2C, std::unique_ptr<const          S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, std::unique_ptr<      volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, std::unique_ptr<const volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, S, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2C, S, int, int, int);

BKSGE_INVOKE_RESULT_TEST(void,     PMSR3C, S,    int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR3C, S&,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR3C, S&&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR3C, S*,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR3C, S*&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR3C, S*&&, int, int, int);
BKSGE_INVOKE_RESULT_TEST(void,     PMSR3C, std::unique_ptr<S>, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3C, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3C, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3C, S, int, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3C, S, int, int, int, int);

typedef int   (S::*                &PMSR0V)()                volatile;
typedef char  (S::* const          &PMSR1V)(long)            volatile;
typedef short (S::*       volatile &PMSR2V)(long, int)       volatile;
typedef int&  (S::* const volatile &PMSR3V)(long, int, char) volatile;

BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,                S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const          S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,       volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,                S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const          S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,       volatile S&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,                S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const          S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,                S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const          S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,       volatile S*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,                S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const          S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,                S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V, std::unique_ptr<               S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, std::unique_ptr<const          S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0V, std::unique_ptr<      volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, std::unique_ptr<const volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0V, std::unique_ptr<S>, int);

BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,                S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const          S,    int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,       volatile S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const volatile S,    int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,                S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const          S&,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,       volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,                S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const          S&&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,       volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,                S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const          S*,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,       volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,                S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const          S*&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,       volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,                S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const          S*&&, int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V,       volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, const volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V, std::unique_ptr<               S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, std::unique_ptr<const          S>, int);
BKSGE_INVOKE_RESULT_TEST(char,     PMSR1V, std::unique_ptr<      volatile S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, std::unique_ptr<const volatile S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, S, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1V, S, int, int);

BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,                S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const          S,    int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,       volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,                S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const          S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,       volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,                S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const          S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,       volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,                S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const          S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,       volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,                S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const          S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,       volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,                S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const          S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V,       volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, const volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V, std::unique_ptr<               S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, std::unique_ptr<const          S>, int, int);
BKSGE_INVOKE_RESULT_TEST(short,    PMSR2V, std::unique_ptr<      volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, std::unique_ptr<const volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, S, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2V, S, int, int, int);

BKSGE_INVOKE_RESULT_TEST(int&,     PMSR3V, S,    int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMSR3V, S&,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMSR3V, S&&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMSR3V, S*,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMSR3V, S*&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMSR3V, S*&&, int, int, int);
BKSGE_INVOKE_RESULT_TEST(int&,     PMSR3V, std::unique_ptr<S>, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3V, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3V, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3V, S, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3V, S, int, int, int, int);

typedef int    (S::*&PMSR0CV)()                const volatile;
typedef float  (S::*&PMSR1CV)(long)            const volatile;
typedef double (S::*&PMSR2CV)(long, int)       const volatile;
typedef int*   (S::*&PMSR3CV)(long, int, char) const volatile;

BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,                S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const          S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,       volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const volatile S);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,                S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const          S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,                S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const          S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,                S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const          S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,                S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const          S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,                S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, std::unique_ptr<               S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, std::unique_ptr<const          S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, std::unique_ptr<      volatile S>);
BKSGE_INVOKE_RESULT_TEST(int,      PMSR0CV, std::unique_ptr<const volatile S>);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0CV, S,    int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0CV, S&,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0CV, S&&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0CV, S*,   int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0CV, S*&,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0CV, S*&&, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR0CV, std::unique_ptr<S>, int);

BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,                S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const          S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,       volatile S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const volatile S,    int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,                S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const          S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,       volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const volatile S&,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,                S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const          S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,       volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const volatile S&&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,                S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const          S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,       volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const volatile S*,   int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,                S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const          S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,       volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const volatile S*&,  int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,                S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const          S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV,       volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, const volatile S*&&, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, std::unique_ptr<               S>, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, std::unique_ptr<const          S>, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, std::unique_ptr<      volatile S>, int);
BKSGE_INVOKE_RESULT_TEST(float,    PMSR1CV, std::unique_ptr<const volatile S>, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1CV, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1CV, S, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR1CV, S, int, int);

BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,                S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const          S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,       volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const volatile S,    int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,                S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const          S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,       volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const volatile S&,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,                S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const          S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,       volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const volatile S&&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,                S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const          S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,       volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const volatile S*,   int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,                S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const          S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,       volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const volatile S*&,  int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,                S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const          S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV,       volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, const volatile S*&&, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, std::unique_ptr<               S>, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, std::unique_ptr<const          S>, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, std::unique_ptr<      volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST(double,   PMSR2CV, std::unique_ptr<const volatile S>, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2CV, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2CV, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2CV, S, UDT, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR2CV, S, int, int, int);

BKSGE_INVOKE_RESULT_TEST(int*,     PMSR3CV, S,    int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMSR3CV, S&,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMSR3CV, S&&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMSR3CV, S*,   int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMSR3CV, S*&,  int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMSR3CV, S*&&, int, int, int);
BKSGE_INVOKE_RESULT_TEST(int*,     PMSR3CV, std::unique_ptr<S>, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3CV, S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3CV, S, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3CV, S, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3CV, S, int, int, UDT);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMSR3CV, S, int, int, int, int);

// pointer to member data
typedef                char S::*PMD1;
typedef const          char S::*PMD2;
typedef       volatile char S::*PMD3;
typedef const volatile char S::*PMD4;

BKSGE_INVOKE_RESULT_TEST(               char&,  PMD1,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD1, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD1,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD1, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMD1,                S* const         );
BKSGE_INVOKE_RESULT_TEST(               char&,  PMD1,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMD1,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMD1,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD1, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD1,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD1, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMD1,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD1, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD1,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD1, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMD1,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD1, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD1,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD1, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMD1,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMD1, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMD1,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD1, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMD1,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMD1, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMD1,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD1, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, S&, int, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, char);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, char*);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, char&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, char&&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, char*&);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD1, char*&&);

BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2, const          S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD2,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD2, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2,                S* const         );
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2, const          S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD2,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD2, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2, const          S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD2,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD2, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMD2, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD2,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD2, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMD2,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMD2, const          S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD2,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD2, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMD2,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMD2, const          S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD2,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD2, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD2, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD2, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD2, S&, int, int, int);

BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,                S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD3, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD3, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,                S* const         );
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,                S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD3, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD3, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,                S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD3, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD3, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD3, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMD3,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD3, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMD3,                S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD3, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMD3,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD3, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMD3,                S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD3, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMD3,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD3, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD3, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD3, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD3, S&, int, int, int);

BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,                S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4, const          S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,                S* const         );
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,                S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4, const          S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,                S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4, const          S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMD4, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD4,                S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD4, const          S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD4,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD4, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD4,                S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD4, const          S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD4,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMD4, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD4, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD4, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMD4, S&, int, int, int);

typedef char S::*const PMDC;
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDC,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDC, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDC,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDC, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDC,                S* const         );
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDC,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDC,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDC,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDC, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDC,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDC, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDC,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDC, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDC,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDC, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDC,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDC, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDC,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDC, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDC,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDC, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDC,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDC, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDC,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDC, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDC,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDC, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDC, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDC, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDC, S&, int, int, int);

typedef char S::*volatile PMDV;
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDV,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDV, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDV,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDV, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDV,                S* const         );
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDV,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDV,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDV,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDV, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDV,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDV, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDV,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDV, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDV,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDV, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDV,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDV, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDV,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDV, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDV,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDV, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDV,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDV, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDV,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDV, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDV,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDV, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDV, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDV, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDV, S&, int, int, int);

typedef char S::*const volatile PMDCV;
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDCV,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDCV, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDCV,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDCV, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDCV,                S* const         );
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDCV,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDCV,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDCV,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDCV, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDCV,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDCV, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDCV,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDCV, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDCV,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDCV, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDCV,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDCV, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDCV,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDCV, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDCV,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDCV, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDCV,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDCV, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDCV,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDCV, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDCV,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDCV, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMDCV, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMDCV, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(PMDCV, S&, int, int, int);

typedef                char S::*&PMDR1;
typedef const          char S::*&PMDR2;
typedef       volatile char S::*&PMDR3;
typedef const volatile char S::*&PMDR4;

BKSGE_INVOKE_RESULT_TEST(               char&,  PMDR1,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR1, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR1,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR1, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDR1,                S* const         );
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDR1,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDR1,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDR1,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR1, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR1,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR1, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDR1,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR1, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR1,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR1, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDR1,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR1, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR1,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR1, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDR1,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDR1, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDR1,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR1, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDR1,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDR1, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDR1,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR1, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR1, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR1, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR1, S&, int, int, int);

BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2, const          S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR2,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR2, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2,                S* const         );
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2, const          S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR2,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR2, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2, const          S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR2,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR2, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDR2, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR2,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR2, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDR2,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDR2, const          S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR2,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR2, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDR2,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDR2, const          S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR2,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR2, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR2, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR2, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR2, S&, int, int, int);

BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,                S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR3, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR3, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,                S* const         );
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,                S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR3, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR3, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,                S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR3, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR3, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR3, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDR3,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR3, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDR3,                S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR3, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDR3,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR3, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDR3,                S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR3, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDR3,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR3, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR3, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR3, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR3, S&, int, int, int);

BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,                S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4, const          S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,                S* const         );
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,                S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4, const          S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,                S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4, const          S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDR4, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR4,                S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR4, const          S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR4,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR4, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR4,                S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR4, const          S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR4,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDR4, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR4, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR4, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDR4, S&, int, int, int);

typedef char S::*const& PMDRC;
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRC,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRC, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRC,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRC, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRC,                S* const         );
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRC,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRC,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRC,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRC, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRC,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRC, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRC,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRC, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRC,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRC, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRC,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRC, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRC,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRC, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDRC,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDRC, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDRC,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDRC, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDRC,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDRC, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDRC,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDRC, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRC, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRC, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRC, S&, int, int, int);

typedef char S::*volatile& PMDRV;
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRV,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRV, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRV,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRV, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRV,                S* const         );
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRV,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRV,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRV,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRV, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRV,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRV, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRV,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRV, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRV,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRV, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRV,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRV, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRV,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRV, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDRV,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDRV, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDRV,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDRV, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDRV,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDRV, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDRV,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDRV, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRV, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRV, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRV, S&, int, int, int);

typedef char S::*const volatile& PMDRCV;
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRCV,                S*);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRCV, const          S*);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRCV,       volatile S*);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRCV, const volatile S*);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRCV,                S* const         );
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRCV,                S*       volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRCV,                S* const volatile);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRCV,                S&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRCV, const          S&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRCV,       volatile S&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRCV, const volatile S&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRCV,                S*&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRCV, const          S*&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRCV,       volatile S*&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRCV, const volatile S*&);
BKSGE_INVOKE_RESULT_TEST(               char&,  PMDRCV,                S*&&);
BKSGE_INVOKE_RESULT_TEST(const          char&,  PMDRCV, const          S*&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&,  PMDRCV,       volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&,  PMDRCV, const volatile S*&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDRCV,                S&&);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDRCV, const          S&&);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDRCV,       volatile S&&);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDRCV, const volatile S&&);
BKSGE_INVOKE_RESULT_TEST(               char&&, PMDRCV,                S);
BKSGE_INVOKE_RESULT_TEST(const          char&&, PMDRCV, const          S);
BKSGE_INVOKE_RESULT_TEST(      volatile char&&, PMDRCV,       volatile S);
BKSGE_INVOKE_RESULT_TEST(const volatile char&&, PMDRCV, const volatile S);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRCV, S,  int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRCV, S*, int, int);
BKSGE_INVOKE_RESULT_TEST_NO_RESULT(             PMDRCV, S&, int, int, int);

}	// namespace invoke_result_test

}	// namespace bksge_type_traits_test

#undef BKSGE_INVOKE_RESULT_TEST
#undef BKSGE_INVOKE_RESULT_TEST_HAS_RESULT
#undef BKSGE_INVOKE_RESULT_TEST_NO_RESULT
