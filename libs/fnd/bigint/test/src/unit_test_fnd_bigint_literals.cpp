/**
 *	@file	unit_test_fnd_bigint_literals.cpp
 *
 *	@brief	bigint リテラルのテスト
 *
 *	@author	myoukaku
 */

#include <bksge/fnd/bigint.hpp>
#include <bksge/fnd/type_traits/is_same.hpp>
#include <bksge/fnd/config.hpp>
#include <gtest/gtest.h>
#include "constexpr_test.hpp"

namespace bksge_bigint_test
{

GTEST_TEST(BigIntTest, LiteralsTest)
{
	{
		using namespace bksge::literals;
		const auto x = 0_bigint;
		static_assert(bksge::is_same<bksge::bigint const, decltype(x)>::value, "");
		EXPECT_EQ(x, 0);
	}
	{
		using namespace bksge::literals;
		constexpr auto x = 0_int128;
		static_assert(bksge::is_same<bksge::int128_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		using namespace bksge::bigint_literals;
		constexpr auto x = 0_int256;
		static_assert(bksge::is_same<bksge::int256_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		using namespace bksge::literals::bigint_literals;
		constexpr auto x = 0_int512;
		static_assert(bksge::is_same<bksge::int512_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	using namespace bksge::bigint_literals;
	{
		constexpr auto x = 0_int1024;
		static_assert(bksge::is_same<bksge::int1024_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		constexpr auto x = 0_int2048;
		static_assert(bksge::is_same<bksge::int2048_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		constexpr auto x = 0_uint128;
		static_assert(bksge::is_same<bksge::uint128_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		constexpr auto x = 0_uint256;
		static_assert(bksge::is_same<bksge::uint256_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		constexpr auto x = 0_uint512;
		static_assert(bksge::is_same<bksge::uint512_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		constexpr auto x = 0_uint1024;
		static_assert(bksge::is_same<bksge::uint1024_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		constexpr auto x = 0_uint2048;
		static_assert(bksge::is_same<bksge::uint2048_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0);
	}
	{
		const auto x = 0xffffffffffffffffffffffffffffffff_bigint;
		static_assert(bksge::is_same<bksge::bigint const, decltype(x)>::value, "");
		EXPECT_EQ(x, bksge::bigint("0xffffffffffffffffffffffffffffffff"));
	}
	{
		constexpr auto x = 12345678901234567890123456789012345678_int128;
		static_assert(bksge::is_same<bksge::int128_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, bksge::int128_t("12345678901234567890123456789012345678"));
	}
	{
		constexpr auto x = -12345678901234567890123456789012345678_int128;
		static_assert(bksge::is_same<bksge::int128_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, bksge::int128_t("-12345678901234567890123456789012345678"));
	}
	{
		constexpr auto x = 0x1234567890abcdef1234567890abcdef_int128;
		static_assert(bksge::is_same<bksge::int128_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, bksge::int128_t("0x1234567890abcdef1234567890abcdef"));
	}
	{
		constexpr auto x = 0xffffffffffffffffffffffffffffffff_int128;
		static_assert(bksge::is_same<bksge::int128_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, bksge::int128_t(-1));
	}
	{
		constexpr auto x = 10000000000000000000000000000000000000000000000000000000000000000000000_int256;
		static_assert(bksge::is_same<bksge::int256_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, bksge::int256_t("10000000000000000000000000000000000000000000000000000000000000000000000"));
	}
	{
		constexpr auto x = -20000000000000000000000000000000000000000000000000000000000000000000000_int256;
		static_assert(bksge::is_same<bksge::int256_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, -bksge::int256_t("20000000000000000000000000000000000000000000000000000000000000000000000"));
	}
	{
		constexpr auto x = 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef_int256;
		static_assert(bksge::is_same<bksge::int256_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, bksge::int256_t("0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"));
	}
	{
		constexpr auto x = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff_int256;
		static_assert(bksge::is_same<bksge::int256_t const, decltype(x)>::value, "");
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, bksge::int256_t(-1));
	}
	{
		constexpr auto x = std::numeric_limits<bksge::int128_t>::min();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x80000000000000000000000000000000_uint128);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::int128_t>::max();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF_uint128);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::int256_t>::min();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x8000000000000000000000000000000000000000000000000000000000000000_uint256);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::int256_t>::max();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF_uint256);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::int512_t>::min();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000_uint512);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::int512_t>::max();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF_uint512);
	}
	//{
	//	constexpr auto x = std::numeric_limits<bksge::int1024_t>::min();
	//	BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000_uint1024);
	//}
	//{
	//	constexpr auto x = std::numeric_limits<bksge::int1024_t>::max();
	//	BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF_uint1024);
	//}
	{
		constexpr auto x = std::numeric_limits<bksge::int2048_t>::min();
		/*BKSGE_CXX14_CONSTEXPR_*/EXPECT_EQ(x, 0xuint2048);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::int2048_t>::max();
		/*BKSGE_CXX14_CONSTEXPR_*/EXPECT_EQ(x, 0xuint2048);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::uint128_t>::min();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x00000000000000000000000000000000_uint128);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::uint128_t>::max();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF_uint128);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::uint256_t>::min();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x0000000000000000000000000000000000000000000000000000000000000000_uint256);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::uint256_t>::max();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF_uint256);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::uint512_t>::min();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000_uint512);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::uint512_t>::max();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF_uint512);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::uint1024_t>::min();
		BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000_uint1024);
	}
	//{
	//	constexpr auto x = std::numeric_limits<bksge::uint1024_t>::max();
	//	BKSGE_CXX14_CONSTEXPR_EXPECT_EQ(x, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF_uint1024);
	//}
	{
		constexpr auto x = std::numeric_limits<bksge::uint2048_t>::min();
		/*BKSGE_CXX14_CONSTEXPR_*/EXPECT_EQ(x, 0xuint2048);
	}
	{
		constexpr auto x = std::numeric_limits<bksge::uint2048_t>::max();
		/*BKSGE_CXX14_CONSTEXPR_*/EXPECT_EQ(x, 0xuint2048);
	}
}

}	// namespace bksge_bigint_test
